Challenge 1:
mysql -u root -p command
CREATE DATABASE schoolDB;
USE schoolDB;
SHOW DATABASES;
//////////////////////////

Chalenge 2:
CREATE TABLE teachers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    subject VARCHAR(50)
);
SHOW TABLES;
DESCRIBE teachers;
/////////////////////////////
chalenge 3:
SELECT * FROM teachers;
SELECT first_name, subject FROM teachers;
/////////////////////////////////
Challenge 4:

CREATE TABLE students(
    id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    teacher_id INT
);


INSERT INTO students(id, first_name, last_name, teacher_id)
VALUES (1, 'Alice', 'Brown', 1),
       (2, 'Bob', 'Johnson', 2);


inner join:............

SELECT students.first_name AS student_name, teachers.first_name AS teacher_name
FROM students
INNER JOIN teachers ON students.teacher_id = teachers.id;



left join:...............

SELECT students.first_name AS student_name, teachers.first_name AS teacher_name
FROM students
LEFT JOIN teachers ON students.teacher_id = teachers.id;

right join:............

SELECT students.first_name AS student_name, teachers.first_name AS teacher_name
FROM students
RIGHT JOIN teachers ON students.teacher_id = teachers.id;

Full join:.............

SELECT students.first_name AS student_name, teachers.first_name AS teacher_name
FROM students
LEFT JOIN teachers ON students.teacher_id = teachers.id

UNION  

SELECT students.first_name AS student_name, teachers.first_name AS teacher_name
FROM students
RIGHT JOIN teachers ON students.teacher_id = teachers.id
WHERE students.id IS NULL;

//////////////////////////////////////////////////////////
Challenge 5:

-- Create Authors table
CREATE TABLE Authors (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    date_of_birth DATE,
    nationality VARCHAR(50)
);

 Publishers table:
CREATE TABLE Publishers (
    publisher_id INT AUTO_INCREMENT PRIMARY KEY,
    publisher_name VARCHAR(100) NOT NULL,
    headquarters_location VARCHAR(100),
    year_founded INT
);

 
CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    isbn VARCHAR(20),
    publication_date DATE,
    genre VARCHAR(50),
    author_id INT,
    publisher_id INT,
    FOREIGN KEY (author_id) REFERENCES Authors(author_id),
    FOREIGN KEY (publisher_id) REFERENCES Publishers(publisher_id)
);

-- Create a junction table for the Many-to-Many relationship between Books and Authors
CREATE TABLE BookAuthors (
    book_id INT,
    author_id INT,
    PRIMARY KEY (book_id, author_id),
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);


Challenge 5:
https://dbdiagram.io/d/6501b94c02bd1c4a5e803a95








